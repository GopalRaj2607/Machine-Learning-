# -*- coding: utf-8 -*-
"""Simple_Linear_Regression_Fuel_Consumption_Project_Solutions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ILP53liqamUXIKPc_fyqUlnBPuy8PE90

# PROBLEM STATEMENT

- You have been hired as a consultant to a major Automotive Manufacturer and you have been tasked to develop a model to predict the impact of increasing the vehicle horsepower (HP) on fuel economy (Mileage Per Gallon (MPG)). You gathered the data:
- Data set:
    - Independant variable X: Vehicle Horse Power
    - Dependant variable Y: Mileage Per Gallon (MPG)

# STEP #1: LIBRARIES IMPORT
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

"""# STEP #2: IMPORT DATASET"""

fueleconomy_df = pd.read_csv('FuelEconomy.csv')

fueleconomy_df.head(100)

fueleconomy_df.head(5)

fueleconomy_df.tail(5)

fueleconomy_df.describe()

fueleconomy_df.info()

"""# STEP#3: VISUALIZE DATASET"""

fueleconomy_df.head(4)

sns.jointplot(x = 'Horse Power', y = 'Fuel Economy (MPG)', data = fueleconomy_df)

sns.jointplot(x = 'Fuel Economy (MPG)', y = 'Horse Power', data = fueleconomy_df)

sns.pairplot(fueleconomy_df)

sns.lmplot(x = 'Horse Power', y =  'Fuel Economy (MPG)', data = fueleconomy_df)

sns.lmplot(x = 'Fuel Economy (MPG)', y =  'Horse Power', data = fueleconomy_df)

"""# STEP#4: CREATE TESTING AND TRAINING DATASET"""

X = fueleconomy_df[['Horse Power']]

y = fueleconomy_df['Fuel Economy (MPG)']

X

y

X.shape

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3)

X_train.shape

X_test.shape

"""# STEP#5: TRAIN THE MODEL"""

X_train.shape

X_test.shape

from sklearn.linear_model import LinearRegression
regressor = LinearRegression(fit_intercept = True)
regressor.fit(X_train, y_train)

print('Linear Model Coeff (m):', regressor.coef_)
print('Linear Model Coeff (b):', regressor.intercept_)

"""# STEP#6: TEST THE MODEL"""

y_predict = regressor.predict(X_test)
y_predict

y_test

plt.scatter(X_train, y_train, color = 'gray')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.xlabel('Horse Power (HP)')
plt.ylabel('MPG')
plt.title('HP vs. MPG (Training Set)')

plt.scatter(X_test, y_test, color = 'gray')
plt.plot(X_test, regressor.predict(X_test), color = 'blue')
plt.xlabel('Horse Power (HP)')
plt.ylabel('MPG')
plt.title('HP vs. MPG (Testing Set)')

HP = 500
# MPG?

MPG = regressor.predict(HP)
MPG